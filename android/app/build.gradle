plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def keystorePropertiesFile = rootProject.file('keystore.properties')
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}


def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.cryto_wallet_3"
    compileSdk flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.cryto_wallet_3"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 21
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    // signer ton application avant Ã§a distribution sur le store 
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
}
    buildTypes {
        release {
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {}
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